From 9a2f70f70768df709d28846374d1831478e0e02d Mon Sep 17 00:00:00 2001
From: Daniel Wagener <daniel.wagener@kernelconcepts.de>
Date: Fri, 22 Nov 2019 13:39:23 +0100
Subject: [PATCH 21/21] video: mxc: allow to set an fb name in devicetree

* parse disp_name property from fb@ node
* propagate it into an attribute udev can read
---
 drivers/video/fbdev/mxc/ldb.c          |  1 +
 drivers/video/fbdev/mxc/mxc_dispdrv.h  |  1 +
 drivers/video/fbdev/mxc/mxc_ipuv3_fb.c | 28 +++++++++++++-------------
 include/linux/ipu-v3.h                 |  1 +
 4 files changed, 17 insertions(+), 14 deletions(-)

diff --git a/drivers/video/fbdev/mxc/ldb.c b/drivers/video/fbdev/mxc/ldb.c
index 5050867dc1f5..fd7c01c3c1fd 100644
--- a/drivers/video/fbdev/mxc/ldb.c
+++ b/drivers/video/fbdev/mxc/ldb.c
@@ -308,6 +308,7 @@ static int ldb_init(struct mxc_dispdrv_handle *mddh,
 		chno = 1;
 
 	chan = &ldb->chan[chno];
+	strncpy(fbi->fix.id, setting->disp_name, 16);
 
 	if (chan->is_used) {
 		dev_err(dev, "LVDS channel%d is already used\n", chno);
diff --git a/drivers/video/fbdev/mxc/mxc_dispdrv.h b/drivers/video/fbdev/mxc/mxc_dispdrv.h
index 58d8a07d3380..7ac0a43679e4 100644
--- a/drivers/video/fbdev/mxc/mxc_dispdrv.h
+++ b/drivers/video/fbdev/mxc/mxc_dispdrv.h
@@ -21,6 +21,7 @@ struct mxc_dispdrv_handle {
 
 struct mxc_dispdrv_setting {
 	/*input-feedback parameter*/
+	char disp_name[16];
 	struct fb_info *fbi;
 	int if_fmt;
 	int default_bpp;
diff --git a/drivers/video/fbdev/mxc/mxc_ipuv3_fb.c b/drivers/video/fbdev/mxc/mxc_ipuv3_fb.c
index c6001b6a73d2..cc8cfd64484a 100644
--- a/drivers/video/fbdev/mxc/mxc_ipuv3_fb.c
+++ b/drivers/video/fbdev/mxc/mxc_ipuv3_fb.c
@@ -3011,6 +3011,9 @@ static int mxcfb_dispdrv_init(struct platform_device *pdev,
 		disp_dev[strlen(plat_data->disp_dev)] = '\0';
 	}
 
+	if (strlen(plat_data->disp_name))
+		strncpy(setting.disp_name, plat_data->disp_name, 16);
+
 	mxcfbi->dispdrv = mxc_dispdrv_gethandle(disp_dev, &setting);
 	if (IS_ERR(mxcfbi->dispdrv)) {
 		ret = PTR_ERR(mxcfbi->dispdrv);
@@ -3139,20 +3142,6 @@ static int mxcfb_register(struct fb_info *fbi)
 	struct mxcfb_info *mxcfbi = (struct mxcfb_info *)fbi->par;
 	struct fb_videomode m;
 	int ret = 0;
-	char bg0_id[] = "DISP3 BG";
-	char bg1_id[] = "DISP3 BG - DI1";
-	char fg_id[] = "DISP3 FG";
-
-	if (mxcfbi->ipu_di == 0) {
-		bg0_id[4] += mxcfbi->ipu_id;
-		strcpy(fbi->fix.id, bg0_id);
-	} else if (mxcfbi->ipu_di == 1) {
-		bg1_id[4] += mxcfbi->ipu_id;
-		strcpy(fbi->fix.id, bg1_id);
-	} else { /* Overlay */
-		fg_id[4] += mxcfbi->ipu_id;
-		strcpy(fbi->fix.id, fg_id);
-	}
 
 	mxcfb_check_var(&fbi->var, fbi);
 
@@ -3362,6 +3351,7 @@ static int mxcfb_get_of_property(struct platform_device *pdev,
 {
 	struct device_node *np = pdev->dev.of_node;
 	const char *disp_dev;
+	const char *disp_name = NULL;
 	const char *mode_str = NULL;
 	const char *pixfmt;
 	int err;
@@ -3369,6 +3359,11 @@ static int mxcfb_get_of_property(struct platform_device *pdev,
 	u32 bpp, int_clk;
 	u32 late_init;
 
+	err = of_property_read_string(np, "disp_name", &disp_name);
+	if (err < 0) {
+		dev_info(&pdev->dev, "no disp name given\n");
+	}
+	dev_info(&pdev->dev, "disp_name: %s\n", disp_name);
 	err = of_property_read_string(np, "disp_dev", &disp_dev);
 	if (err < 0) {
 		dev_dbg(&pdev->dev, "get of property disp_dev fail\n");
@@ -3430,6 +3425,11 @@ static int mxcfb_get_of_property(struct platform_device *pdev,
 	len = min(sizeof(plat_data->disp_dev) - 1, strlen(disp_dev));
 	memcpy(plat_data->disp_dev, disp_dev, len);
 	plat_data->disp_dev[len] = '\0';
+	if (disp_name) {
+		len = min(sizeof(plat_data->disp_name) - 1, strlen(disp_name));
+		memcpy(plat_data->disp_name, disp_name, len);
+	}
+	plat_data->disp_name[len] = '\0';
 	plat_data->mode_str = (char *)mode_str;
 	plat_data->default_bpp = bpp;
 	plat_data->int_clk = (bool)int_clk;
diff --git a/include/linux/ipu-v3.h b/include/linux/ipu-v3.h
index ae09614a2257..a6af476956cd 100644
--- a/include/linux/ipu-v3.h
+++ b/include/linux/ipu-v3.h
@@ -744,6 +744,7 @@ bool ipu_pixel_format_is_multiplanar_yuv(uint32_t fmt);
 
 struct ipuv3_fb_platform_data {
 	char				disp_dev[32];
+	char				disp_name[16];
 	u32				interface_pix_fmt;
 	char				*mode_str;
 	int				default_bpp;
-- 
2.23.0

